name: github-ci-test
on:
  pull_request:
    branches: [main]
    types: [opened, synchronize]
  workflow_dispatch:
concurrency:
  group: github-ci-test
  cancel-in-progress: true
jobs:
  github-ci-test:
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/github-script@v3
        id: get-pr
        with:
          script: |
            const request = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            }
            core.info(`Getting PR #${request.pull_number} from ${request.owner}/${request.repo}`)
            try {
              const result = await github.pulls.get(request)
              return result.data
            } catch (err) {
              core.setFailed(`Request failed with error ${err}`)
            }
      - uses: actions/checkout@v2
        with:
          repository: ${{ fromJSON(steps.get-pr.outputs.result).head.repo.full_name }}
          ref: ${{ fromJSON(steps.get-pr.outputs.result).head.sha }} # or .head.ref for branch name
      # - name: Get sha
      #   id: get-sha
      #   run: echo "SHA_ID=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      # - run: echo "${{ steps.git-sha.outputs.SHA_ID }}"
      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Check outputs
        run: echo ${{ steps.vars.outputs.sha_short }}